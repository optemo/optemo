<%= form_tag("/compare/filter",{:id => 'search_form'}) do %>
  <%= @s.search.keyword_search.blank? ? text_field_tag('search') : text_field_tag('search', @s.search.keyword_search) %>
	<div class="ui-widget" style="display:inline;">
		<%= submit_tag 'Search', {:id => 'submit_button'} %>
	</div>
  <% if @s.search.keyword_search %>
	<div class='selected_cat_features'><%= link_to image_tag('close.png', :width => '13'), "", {:title => t('products.compare.rembrandfilter'), :class => "removesearch"} %> Search: <%= @s.search.keyword_search %>
	</div>
	<%= hidden_field_tag "previous_search_word", @s.search.keyword_search %>
  <% else %>
    <%= hidden_field_tag "previous_search_word", '' %>
  <% end %>
<% end %>

<%= form_tag("",{:id => 'filter_form'}) do %>
<% i = 0 # Yes, I know, this isn't Rails-y, but we need to assign a different UI position to each feature of all kinds, in order. %> 
<% @s.categorical["filter"].each_with_index do |feat, index| %>
	<div class='feature'>
		<% chosen_cats = chosencats(feat) %>
		<div class='catlabel' data-position="<%= i %>">
			<%= render :partial => 'desc', :locals => {:feat => feat} %>
			<%= link_to t('products.' + feat), "#" %>
			<% if @s.directLayout %>
				<div id="groupby<%= index %>" class="groupby" data-feat="<%= feat %>" data-position="<%= i %>">Show Groups</div>
			<% end %>
		</div>
		<% unless chosen_cats.nil? || chosen_cats.empty? %>
			<%# At least one item selected %>
			<% chosen_cats.each do |b| %>
				<div class='selected_cat_features'><%= link_to image_tag('close.png', :width => '13'), "", {:title => t('products.compare.rembrandfilter'), :"data-cat" => feat, :class => "removefilter", :"data-id" => b} %> <%= b %>
				</div>
			<% end %>
			<%= select('superfluous', feat, [t('products.compare.add'+feat)] + CatSpec.all(feat).reject {|b| chosen_cats.index(b)}, options={}, {:id => feat+"selector", :class => "selectboxfilter"})%>
		<% else %>
			<%# Nothing selected %>
			<%= select('superfluous', feat, [t('products.compare.all'+feat+'s')] + CatSpec.all(feat), options={}, {:id => feat+"selector", :class => "selectboxfilter"})%>		
		<% end %>
		
		<%= hidden_field_tag "myfilter[#{feat}]", chosen_cats.join("*") %>
	</div>
	<% i = i + 1 %>
<% end %>
<% @s.continuous["filter"].each do |feat| %>
	<%= render :partial => 'slider', 
		:locals => {:name => t('products.' + feat),
		:i => i,
		:feat => feat,
		:money_formatting => feat == 'price',
		:overall_min => ContSpec.allMinMax(feat)[0],
		:overall_max => ContSpec.allMinMax(feat)[1]} %>
	<% i = i + 1 %>
<% end %>
<% @s.binary["filter"].each do |feat| %>
	<div class='feature'>
		<div class='label' data-position="<%= i %>">
			<%= render :partial => 'desc', :locals => {:feat => feat} %>
			<% dobj = Userdatabin.find_by_search_id_and_name(@s.search.id,feat) %>
			<%= check_box('myfilter', feat, {:checked => dobj.nil? || dobj.value == false ? false : 'checked', :class => 'binary_filter'})%>
			<%= link_to t('products.' + feat), "#" %>
		</div>
	</div>
	<% i = i + 1 %>	
<% end %>
<%= hidden_field_tag 'myfilter[search_hist]', @s.search.id %>
<% end %>
